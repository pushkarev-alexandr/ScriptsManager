{
    "openCopy": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import openCopy; openCopy.openCopy()",
        "custom_command": "",
        "tooltip": "Копирует выбранный скрипт в папку temp и открывает его, чтобы не менять скрипт пользователя",
        "icon": "",
        "shortcut": "Ctrl+Alt+O",
        "shortcut_context": "Без контекста",
        "index": 2,
        "menu_path": "File/Open Copy..."
    },
    "bvfx_findPath": {
        "default": true,
        "custom_cmd_checkbox": false,
        "command": "import bvfx_findPath; bvfx_findPath.bvfx_findPath(False)",
        "custom_command": "",
        "tooltip": "Переподтянет потерянные риды. Нужно указать папку в которой нужно искать потерянные файлы. Указывайте папку максимально близкую к вашему файлу иначе скрипт будет очень долго искать необходимый файл",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/File/Locate files paths"
    },
    "addSquareFormats": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import addSquareFormats; addSquareFormats.addSquareFormats()",
        "custom_command": "",
        "tooltip": "Можно добавить квадратные форматы, так как по умолчанию у нас есть только square_512",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/Formats/Add Square Formats"
    },
    "switchPrecompSetup": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import switchPrecompSetup; switchPrecompSetup.switchPrecompSetup()",
        "custom_command": "",
        "tooltip": "Выделяем врайт, и из него создается сетап из ноды свитч и ноды рид",
        "icon": "",
        "shortcut": "Ctrl+Shift+W",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/Node Graph/Switch Precomp Setup"
    },
    "smartConnect": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import smartConnect; smartConnect.smartConnect()",
        "custom_command": "",
        "tooltip": "При подключении нод выравнивает их",
        "icon": "",
        "shortcut": "+a",
        "shortcut_context": "1",
        "index": -1,
        "menu_path": "GreenFX/Node Graph/Smart Connect"
    },
    "addLabel": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import addLabel; addLabel.addLabel()",
        "custom_command": "",
        "tooltip": "Добавляет лэйбл для выбранных нод, если указать пустую строку, то удалит существующий лэйбл",
        "icon": "",
        "shortcut": "i",
        "shortcut_context": "2",
        "index": -1,
        "menu_path": "GreenFX/Node/Add Label"
    },
    "setZinRead": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import setZinRead; setZinRead.setZinRead()",
        "custom_command": "",
        "tooltip": "Во всех ридах меняет путь в виде //192.168.100.56/data на диск Z",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/File/Set Z in Read"
    },
    "CardReconcile": {
        "default": true,
        "custom_cmd_checkbox": false,
        "command": "import CardReconcile; CardReconcile.main()",
        "custom_command": "",
        "tooltip": "Делает из карточки корнерпин",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/Transform/Card Reconcile"
    },
    "smartMerge": {
        "default": false,
        "custom_cmd_checkbox": true,
        "command": "import smartMerge; smartMerge.smartMerge()",
        "custom_command": "nuke.menu('Nodes').addCommand('Merge/Merge','import smartMerge; smartMerge.smartMerge()', 'M', shortcutContext=2, icon='Merge.png')",
        "tooltip": "Заменяет стандартный мердж, втыкает B вход и располагает ноду мердж снизу. Если выбрано несколько нод, создает стек из нескольких мерджей",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/Node Graph/Smart Merge"
    },
    "viewMask": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import viewMask; viewMask.viewMask()",
        "custom_command": "",
        "tooltip": "Засовывает канал альфа из второй выбранной ноды в красный канал первой выбранной ноды чтобы оценить где используется альфа. Если нажать еще раз, удалит ноду ChannelMerge",
        "icon": "",
        "shortcut": "Alt+Shift+A",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/Node Graph/View Mask"
    },
    "WrapItUpFix": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import WrapItUpFix; WrapItUpFix.WrapItUpFix()",
        "custom_command": "",
        "tooltip": "Фиксит название ридов чтобы нормально отрабатывал WrapItUp",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/Utilities/WrapItUp Fix"
    },
    "restoreNodeName": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import restoreNodeName; restoreNodeName.restoreNodeName()",
        "custom_command": "",
        "tooltip": "Задает имя для ноды по названию ее класса, для ноды Roto выставляет output в alpha",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/Node/Restore Node Name"
    },
    "sortReadsByFilename": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import sortReadsByFilename; sortReadsByFilename.main()",
        "custom_command": "",
        "tooltip": "Сортирует, выравнивает выбранные риды по имени файла",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/Node Graph/Sort Reads By Filename"
    },
    "combineZOL": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import combineZOL; combineZOL.main()",
        "custom_command": "",
        "tooltip": "Объединяет left и right рендера на проекте Mazhor в сцене ZOL",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/Projects/Mazhor/Combine ZOL"
    },
    "linkBlurToErode": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import linkBlurToErode; linkBlurToErode.linkBlurToErode()",
        "custom_command": "",
        "tooltip": "Во время создания ноды блюр линкует size к ноде erode если перед созданием была выбрана нода erode",
        "icon": "",
        "shortcut": "Ctrl+B",
        "shortcut_context": "2",
        "index": -1,
        "menu_path": "GreenFX/Create/Link Blur to Erode"
    },
    "renameFile": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import renameFile; renameFile.main()",
        "custom_command": "",
        "tooltip": "Переименовывает файл и обновляет имя в выбранной ноде Read",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/File/Rename File"
    },
    "knobCreater": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import knobCreater; knobCreater.knobCreater()",
        "custom_command": "",
        "tooltip": "В Nuke нельзя создавать из менюшки такие кнобы как IArray_Knob и Eyedropper_Knob, сделал свою менюшку для таких кнобов",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/Knobs/Add Custom Knob"
    },
    "skewNodes": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import skewNodes; skewNodes.skewNodes()",
        "custom_command": "",
        "tooltip": "Cвдигает ноды чтобы они не были в одну вертикальную линию",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/Node Graph/Skew Nodes"
    },
    "RenderSetup": {
        "default": true,
        "custom_cmd_checkbox": false,
        "command": "import RenderSetup; RenderSetup.main()",
        "custom_command": "",
        "tooltip": "",
        "icon": "",
        "shortcut": "[",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/Render/Render Setup"
    },
    "batchRename": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import batchRename; batchRename.batchRename()",
        "custom_command": "",
        "tooltip": "Выбираем папку, в этой папке во всех файлах строка from будет переименована в to. К примеру можно переименовать версию v002 в v003",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/File/Batch Rename"
    },
    "FooocusViewer": {
        "default": false,
        "custom_cmd_checkbox": true,
        "command": "import FooocusViewer; FooocusViewer.FooocusViewer()",
        "custom_command": "import FooocusViewer\nnukescripts.registerWidgetAsPanel('FooocusViewer.ImageGallery', 'Fooocus Viewer', 'uk.co.thefoundry.FooocusViewer')",
        "tooltip": "Панель для Fooocus, отображает картинки сгенеренные через Fooocus",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "NukePanels/Fooocus Viewer"
    },
    "openNkAsNewComp": {
        "default": false,
        "custom_cmd_checkbox": true,
        "command": "import openNkAsNewComp; openNkAsNewComp.openNkAsNewComp()",
        "custom_command": "from openNkAsNewComp import openNkAsNewComp\nnukescripts.addDropDataCallback(openNkAsNewComp)",
        "tooltip": "Если закинуть .nk файл в Nuke, то он вместо того чтобы скопировать содержимое откроется как проект",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "CallbackScripts/Open Nk As New Comp"
    },
    "MakeProxy": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import MakeProxy; MakeProxy.main()",
        "custom_command": "",
        "tooltip": "Рендерит proxy в Temp папку для выбранных ридов и подставляет путь в Read proxy",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/Render/Make Proxy"
    },
    "addNPLayers": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import addNPLayers; addNPLayers.addNPLayers()",
        "custom_command": "",
        "tooltip": "Добавляет N и P слои которых по умолчанию нет в нюке, но они очень нужные",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/Channels/Add N P Layers"
    },
    "checkChannels": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import checkChannels; checkChannels.checkChannels()",
        "custom_command": "",
        "tooltip": "Выбираем две ноды, скрипт проверяет совпадают ли каналы в этих двух нодах, нужно чтобы сравнить не пропали ли каналы в новом рендере или не появились ли какие-то новые",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/Channels/Check Channels"
    },
    "bakeRelativePaths": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import bakeRelativePaths; bakeRelativePaths.bakeRelativePaths()",
        "custom_command": "",
        "tooltip": "Для выбранных нод Read(или всех ридов если ничего не выбрано) заменяет отновительный путь на полный с помощью getEvaluatedValue",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/File/Bake Relative Paths"
    },
    "openInLamaCleaner": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import openInLamaCleaner; openInLamaCleaner.openInLamaCleaner()",
        "custom_command": "",
        "tooltip": "Открывает выбранный Read в приложении Lama-Cleaner",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/ML/Open In Lama Cleaner"
    },
    "OllamaChat": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import OllamaChat; OllamaChat.main()",
        "custom_command": "",
        "tooltip": "Чат с искуственным интелектом",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/ML/Ollama Chat"
    },
    "bakeDotsColor": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import bakeDotsColor; bakeDotsColor.bakeDotsColor()",
        "custom_command": "",
        "tooltip": "Запекает цвет лэйбла выбранной точки или всех если ничего не выбрано в html код. после этого цвет лэйбла не меняется при приближении и отдалении. Cкрипт создавался во время работы над проектом Mira где были цветные лейблы на точках, но они всеравно оставались чернобелыми",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/Node/Bake Dots Color"
    },
    "showClassName": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import showClassName; showClassName.showClassName()",
        "custom_command": "",
        "tooltip": "Выводит сообщение с именами классов выбранных нод",
        "icon": "",
        "shortcut": "Ctrl+Alt+Shift+I",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/Node/Show Class Name"
    },
    "dotify": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import dotify; dotify.main()",
        "custom_command": "",
        "tooltip": "Вместо веера инпутов расходящихся из одной точки, делает сетку",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/Node Graph/Dotify"
    },
    "unhideAllInputs": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import unhideAllInputs; unhideAllInputs.unhideAllInputs()",
        "custom_command": "",
        "tooltip": "Делает все инпуты видимыми",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/Node Graph/Unhide All Inputs"
    },
    "cornerPinToTracker": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import cornerPinToTracker; cornerPinToTracker.cornerPinToTracker()",
        "custom_command": "",
        "tooltip": "Конвертирует все кнобы с анимацией в трекера ноды трекер",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/Transform/CornerPin to Tracker"
    },
    "RelinkReadsGlobal": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import RelinkReadsGlobal; RelinkReadsGlobal.relink_render_root_global()",
        "custom_command": "",
        "tooltip": "Cкрипт для переподтягивания рендеров, делался преимущественно для сцены ZOL в проекте Mazhor",
        "icon": "",
        "shortcut": "Ctrl+Alt+G",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/Projects/Mazhor/Relink Reads Global"
    },
    "Dots": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import Dots; Dots.Dots()",
        "custom_command": "",
        "tooltip": "Скрипт для выравнивания точек по углам. Скинул Айдар",
        "icon": "",
        "shortcut": ",",
        "shortcut_context": "2",
        "index": -1,
        "menu_path": "GreenFX/Node Graph/Dots"
    },
    "jumpBetweenClones": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import jumpBetweenClones; jumpBetweenClones.jumpBetweenClones()",
        "custom_command": "",
        "tooltip": "Позволяет переключаться между клонами",
        "icon": "",
        "shortcut": "Shift+W",
        "shortcut_context": "2",
        "index": -1,
        "menu_path": "GreenFX/Node Graph/Jump Between Clones"
    },
    "lockPosition": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import lockPosition; lockPosition.lockPosition()",
        "custom_command": "",
        "tooltip": "Блокирует позицию выделенных нод в текущем положении. Повторный вызов команды разблокирует изменение положения. В knobChanged ноды добавляется код который блокирует изменение положения.",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/Node Graph/Lock Position"
    },
    "moveNodes": {
        "default": false,
        "custom_cmd_checkbox": true,
        "command": "import moveNodes; moveNodes.moveNodes()",
        "custom_command": "nuke.menu('Nuke').addCommand('GreenFX/Node Graph/Move Nodes/Up', 'import moveNodes; moveNodes.moveSel_up()', 'Ctrl+Shift+Up')\nnuke.menu('Nuke').addCommand('GreenFX/Node Graph/Move Nodes/Down', 'import moveNodes; moveNodes.moveSel_down()', 'Ctrl+Shift+Down')\nnuke.menu('Nuke').addCommand('GreenFX/Node Graph/Move Nodes/Right', 'import moveNodes; moveNodes.moveSel_right()', 'Ctrl+Shift+Right')\nnuke.menu('Nuke').addCommand('GreenFX/Node Graph/Move Nodes/Left', 'import moveNodes; moveNodes.moveSel_left()', 'Ctrl+Shift+Left')",
        "tooltip": "Позволяет двигать ноды стрелками в нодграфе",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/Node Graph/Move Nodes"
    },
    "labelConnector": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import labelConnector; labelConnector.labelConnector()",
        "custom_command": "",
        "tooltip": "Создает ноды с подписями к которым потом можно подключиться из любого места",
        "icon": "",
        "shortcut": "+#Q",
        "shortcut_context": "2",
        "index": -1,
        "menu_path": "GreenFX/Node Graph/Label Connector"
    },
    "ReloadModule": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import ReloadModule; ReloadModule.ReloadModule()",
        "custom_command": "",
        "tooltip": "Перезагружает модуль с указанным именем. Полезно когда внесли какие-то изменения в модуль",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/Utilities/Reload Module"
    },
    "corenerpinLabel": {
        "default": true,
        "custom_cmd_checkbox": true,
        "command": "import corenerpinLabel; corenerpinLabel.corenerpinLabel()",
        "custom_command": "import corenerpinLabel",
        "tooltip": "Во время нажатия кнопки copy_from или copy_to убирает лэйбл матчмува или стабилайза(это лэйбл выставляет кнопка matchmove/stabilize в хотбоксе)",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/Transform/Corenerpin Label"
    },
    "distortTracker": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import distortTracker; distortTracker.distortTracker()",
        "custom_command": "",
        "tooltip": "Дистортит позицию точек ноды Tracker с помощью ноды дисторсии эквалайзера",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/Transform/Distort Tracker"
    },
    "mergeTrackers": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import mergeTrackers; mergeTrackers.mergeTrackers()",
        "custom_command": "",
        "tooltip": "Объединяет несколько выбранных нод трекер в одну ноду",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/Transform/Merge Trackers Nodes"
    },
    "transformCornerPin": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import transformCornerPin; transformCornerPin.transformCornerPin()",
        "custom_command": "",
        "tooltip": "Трансформит точки корнерпина как указано в выбранной ноде трансформ",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/Transform/Transform CornerPin"
    },
    "transformTracker": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import transformTracker; transformTracker.transformTracker()",
        "custom_command": "",
        "tooltip": "Трансформит точки трекера как указано в выбранной ноде трансформ",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/Transform/Transform Tracker"
    },
    "listFrameServerWorkers": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import listFrameServerWorkers; listFrameServerWorkers.listFrameServerWorkers()",
        "custom_command": "",
        "tooltip": "Выводит список доступных хост машин на которых запущен FrameServer и к которым есть доступ и текущей машины, т.е. на какие тачки можно отправить рендер стандартными средствами нюка",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/Utilities/List Frame Server Workers"
    },
    "PerformanceTimers": {
        "default": false,
        "custom_cmd_checkbox": true,
        "command": "import PerformanceTimers; PerformanceTimers.PerformanceTimers()",
        "custom_command": "import PerformanceTimers",
        "tooltip": "Добавляет кнопки для включения и выключения Performance Timers в Nuke",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/Utilities/Performance Timers"
    },
    "fullFrameProcessingByDefault": {
        "default": false,
        "custom_cmd_checkbox": true,
        "command": "import fullFrameProcessingByDefault; fullFrameProcessingByDefault.fullFrameProcessingByDefault()",
        "custom_command": "nuke.knobDefault('Viewer.full_frame_processing', 'True')",
        "tooltip": "Если плагин включен, то новый вьювер будет создаваться с включенным full_frame_processing",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/Viewer/Full Frame Processing By Default"
    },
    "updateLocalization": {
        "default": false,
        "custom_cmd_checkbox": true,
        "command": "import updateLocalization; updateLocalization.updateLocalization()",
        "custom_command": "from updateLocalization import updateLocalizationMain\nnuke.addAfterRender(updateLocalizationMain)",
        "tooltip": "Когда заканчивается рендер, скрипт ищет рид который соотносится с врайтом из которого рендерим и обновляет локализацию",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "CallbackScripts/Update Localization"
    },
    "renderLog": {
        "default": true,
        "custom_cmd_checkbox": true,
        "command": "import renderLog; renderLog.renderLog()",
        "custom_command": "import renderLog\nnuke.addAfterRender(renderLog.renderLog)\nnuke.menu('Nuke').addCommand('GreenFX/File/Nk Script Path from Read', 'import renderLog;renderLog.getRelatedScriptPath()')",
        "tooltip": "После рендера сохраняет в базу путь до отрендеренного файла и путь до скрипта который этот файл отрендерил",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/File/Render Log"
    },
    "open_remove_localization": {
        "default": false,
        "custom_cmd_checkbox": true,
        "command": "import open_remove_localization; open_remove_localization.open_remove_localization()",
        "custom_command": "nuke.menu('Nuke').addCommand('Cache/Localization/Open Localization Folder', 'import open_remove_localization;open_remove_localization.open_localization_folder()')\nnuke.menu('Nuke').addCommand('Cache/Localization/Remove Localization Folder', 'import open_remove_localization;open_remove_localization.remove_localization_folder()')",
        "tooltip": "Добавляет дополнительные кнопки в меню Cache/Localization для открытия папки локализации и удаления этой папки",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "Cache/Localization/Open_Remove_Localization"
    },
    "CustomGuides": {
        "default": false,
        "custom_cmd_checkbox": true,
        "command": "import CustomGuides",
        "custom_command": "import CustomGuides",
        "tooltip": "Добавляет во вьювер правило третей и симметрии. Также добавляет новый формат каше 2.387 для формата 2048х858",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "Custom/Custom Guides"
    },
    "CropKarma": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import CropKarma; CropKarma.export_crop_to_ndc()",
        "custom_command": "",
        "tooltip": "",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/Projects/Mazhor/Crop Karma"
    },
    "combineZOLKarma": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import combineZOLKarma; combineZOLKarma.main()",
        "custom_command": "",
        "tooltip": "",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/Projects/Mazhor/Combine ZOL Karma"
    },
    "SplitRenderZOL": {
        "default": false,
        "custom_cmd_checkbox": false,
        "command": "import SplitRenderZOL; SplitRenderZOL.SplitRender()",
        "custom_command": "",
        "tooltip": "Разделяет рендер по пасам с кастомной логикой, клонированием Grade и подгрузкой утилит",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "GreenFX/Projects/Mazhor/Split Render ZOL"
    },
    "AfanasyButtons": {
        "default": true,
        "custom_cmd_checkbox": true,
        "command": "import AfanasyButtons; AfanasyButtons.AfanasyButtons()",
        "custom_command": "nuke.menu('Nuke').addCommand('Render/Afanasy/Set Free', 'import AfanasyButtons; AfanasyButtons.setFree()')\nnuke.menu('Nuke').addCommand('Render/Afanasy/Eject and NIMBY', 'import AfanasyButtons; AfanasyButtons.ejectAndNIMBY()')",
        "tooltip": "Добавляет кнопки Set Free и Eject and NIMBY в Nuke",
        "icon": "",
        "shortcut": "",
        "shortcut_context": "Без контекста",
        "index": -1,
        "menu_path": "Render/Afanasy Buttons"
    }
}